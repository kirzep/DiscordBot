const tournamentsList = require('../data/tournaments.json');
const killerList = require('../data/killers-names.json');
const perkList = require('../data/all-perks.json');
const offeringsList = require('../data/offerings-list.json');
const itemsList = require('../data/items-list.json');
const addonsRarityList = require('../data/addons-rarity-list.json');
const balance = require('../data/balance_data/balance.json');

/*const tournament = "dbdleague";
const killer = 'Cenobite';
const perk1 = 'Iron Will';
const perk2 = 'Lucky Break';
const perk3 = 'Head on';
const perk4 = 'Quick & Quiet';
const offering = "vigo's shroud";
const item = 'flashlight_green';
const addonsRarity = 'rarity_uncommon';*/

const formate = (string) => string.toLowerCase().replace(/[^a-z&]/g, ''); // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Ç—Ä–æ–∫–∏


/*const formate = (string) => {
  if (string !== null && string !== undefined) {
    return string.toLowerCase().replace(/[^a-z&]/g, '');
  }
  return 'null';
};*/


const formateArray = (array) => array.map(element => element.toLowerCase().replace(/[^a-z&]/g, '')); // –§—É–Ω–∫—Ü–∏—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –º–∞—Å—Å–∏–≤–∞


/*const formateArray = (array) => {
  if (array !== null && array !== undefined) {
    return array.map(element => element.toLowerCase().replace(/[^a-z&]/g, ''));
  }
  return 'null';
};*/




const compare = (tournament, killer, perk1, perk2, perk3, perk4, offering, item, addonsRarity) => {
  // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –≤—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
  const formatedTournamentInput = formate(tournament.value);
  const formatedKillerInput = formate(killer.value);
  const formatedPerk1Input = formate(perk1.value);
  const formatedPerk2Input = formate(perk2.value);
  const formatedPerk3Input = formate(perk3.value);
  const formatedPerk4Input = formate(perk4.value);
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –ø–æ–¥–Ω–æ—à–µ–Ω–∏—è
  let formatedOfferingInput;
  if (offering !== null) {
    formatedOfferingInput = formate(offering.value);
  } else {
    formatedOfferingInput = 'null';
  }
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –ø—Ä–µ–¥–º–µ—Ç–∞
  let formatedItemInput;
  if (item !== null) {
    formatedItemInput = formate(item.value);
  } else {
    formatedItemInput = 'null';
  }
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –∞–¥–¥–æ–Ω–æ–≤
  let formatedaddonsRarityInput;
  if (addonsRarity !== null) {
    formatedaddonsRarityInput = formate(addonsRarity.value);
  } else {
    formatedaddonsRarityInput = 'null';
  }

  // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –º–∞—Å—Å–∏–≤—ã —Å –¥–∞–Ω–Ω—ã–º–∏
  const formatedTournament = formateArray(tournamentsList.names);
  const formatedKillers = formateArray(killerList.names);
  const formatedPerks = formateArray(perkList.perks);
  const formatedOfferings = formateArray(offeringsList.names);
  const formatedItems = formateArray(itemsList.names);
  const formatedaddonsRarity = formateArray(addonsRarityList.names);

  // –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
  //–î–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∞–Ω–∏—è –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö, –¥–∞–Ω–Ω—ã–º –≤ data
  const tournamentValid = formatedTournament.includes(formatedTournamentInput);
  const killersValid = formatedKillers.includes(formatedKillerInput);
  const perksValid = formatedPerks.includes(formatedPerk1Input) && formatedPerks.includes(formatedPerk2Input) && formatedPerks.includes(formatedPerk3Input) && formatedPerks.includes(formatedPerk4Input);
  const offeringsValid = formatedOfferings.includes(formatedOfferingInput);
  const itemsValid = formatedItems.includes(formatedItemInput);
  const addonsRarityValid = formatedaddonsRarity.includes(formatedaddonsRarityInput);
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –≤–≤–æ–¥–∏–º—ã—Ö –¥–∞–Ω–Ω—ã—Ö
  let result = '';
  if (!tournamentValid || !killersValid || !perksValid || !offeringsValid || !itemsValid || !addonsRarityValid) {
    result = "üíÄ –í—ã —Å–ª–æ–≤–∏–ª–∏ –æ—à–∏–±–∫—É üíÄ";
  }
  if (result.length !== 0) { 
    if (!tournamentValid) {
      result = `${result}\n\n–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –≤–≤–µ–¥–µ–Ω–æ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç—É—Ä–Ω–∏—Ä–∞`
    }
    if (!killersValid) {
      result = `${result}\n\n–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –≤–≤–µ–¥–µ–Ω–æ –∏–º—è –∫–∏–ª–ª–µ—Ä–∞`
    }
    if (!formatedPerks.includes(formatedPerk1Input)) {
      result = `${result}\n\n–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –≤–≤–µ–¥–µ–Ω–æ –Ω–∞–∑–≤–∞–Ω–∏–µ 1 –ø–µ—Ä–∫–∞: ${perk1.value}`
    }
    if (!formatedPerks.includes(formatedPerk2Input)) {
      result = `${result}\n\n–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –≤–≤–µ–¥–µ–Ω–æ –Ω–∞–∑–≤–∞–Ω–∏–µ 2 –ø–µ—Ä–∫–∞: ${perk2.value}`
    }
    if (!formatedPerks.includes(formatedPerk3Input)) {
      result = `${result}\n\n–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –≤–≤–µ–¥–µ–Ω–æ –Ω–∞–∑–≤–∞–Ω–∏–µ 3 –ø–µ—Ä–∫–∞: ${perk3.value}`
    }
    if (!formatedPerks.includes(formatedPerk4Input)) {
      result = `${result}\n\n–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –≤–≤–µ–¥–µ–Ω–æ –Ω–∞–∑–≤–∞–Ω–∏–µ 4 –ø–µ—Ä–∫–∞: ${perk4.value}`
    }
    if (!offeringsValid) {
      result = `${result}\n\n–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –≤–≤–µ–¥–µ–Ω–æ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–æ–¥–Ω–æ—à–µ–Ω–∏—è`
    }
    if (!itemsValid) {
      result = `${result}\n\n–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –≤–≤–µ–¥–µ–Ω–æ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞`
    }
    if (!addonsRarityValid) {
      result = `${result}\n\n–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –≤–≤–µ–¥–µ–Ω–∞ —Ä–µ–¥–∫–æ—Å—Ç—å –∞–¥–¥–æ–Ω–æ–≤`
    }
    return result;
  } 
  const killerTier = balance[formatedTournamentInput][formatedKillerInput]['tier'];
  const formatedGeneralBalance = formateArray(balance[formatedTournamentInput]['general-balance']);
  const formatedTierBalance = formateArray(balance[formatedTournamentInput][killerTier]);
  const formatedOfferingBalance = formateArray(balance[formatedTournamentInput][formatedKillerInput]['offerings']);
  const formatedItemBalance = formateArray(balance[formatedTournamentInput][formatedKillerInput]['items']);
  let formatedaddonsRarityBalance;
  if (balance[formatedTournamentInput][formatedKillerInput]['addons'][formatedItemInput] !== undefined) {
  formatedaddonsRarityBalance = formateArray(balance[formatedTournamentInput][formatedKillerInput]['addons'][formatedItemInput])
  } else {
    formatedaddonsRarityBalance = 'null';
  }
  const formatedKillerBans = formateArray(balance[formatedTournamentInput][formatedKillerInput]['perks'])
  if (formatedGeneralBalance.includes(formatedPerk1Input || formatedPerk2Input || formatedPerk3Input || formatedPerk4Input) || formatedTierBalance.includes(formatedPerk1Input || formatedPerk2Input || formatedPerk3Input || formatedPerk4Input) || !formatedOfferingBalance.includes(formatedOfferingInput) || !formatedItemBalance.includes(formatedItemInput) || !formatedaddonsRarity.includes(formatedaddonsRarityInput) || formatedKillerBans.includes(formatedPerk1Input || formatedPerk2Input || formatedPerk3Input || formatedPerk4Input)) {
    result = '‚ùå –í –í–ê–®–ï–ú –ë–ò–õ–î–ï –ï–°–¢–¨ –û–®–ò–ë–ö–ò ‚ùå'
    if (formatedKillerBans.includes(formatedPerk1Input)) {
      result = `${result}\n\nüî∂${perk1.value} –∑–∞–±–∞–Ω–µ–Ω –¥–ª—è —ç—Ç–æ–≥–æ –∫–∏–ª–ª–µ—Ä–∞`;
    }
    if (formatedKillerBans.includes(formatedPerk2Input)) {
      result = `${result}\n\nüî∂${perk2.value} –∑–∞–±–∞–Ω–µ–Ω –¥–ª—è —ç—Ç–æ–≥–æ –∫–∏–ª–ª–µ—Ä–∞`;
    }
    if (formatedKillerBans.includes(formatedPerk3Input)) {
      result = `${result}\n\nüî∂${perk3.value} –∑–∞–±–∞–Ω–µ–Ω –¥–ª—è —ç—Ç–æ–≥–æ –∫–∏–ª–ª–µ—Ä–∞`;
    }
    if (formatedKillerBans.includes(formatedPerk4Input)) {
      result = `${result}\n\nüî∂${perk4.value} –∑–∞–±–∞–Ω–µ–Ω –¥–ª—è —ç—Ç–æ–≥–æ –∫–∏–ª–ª–µ—Ä–∞`;
    }
    if (formatedGeneralBalance.includes(formatedPerk1Input)) {
      result = `${result}\n\nüî∂${perk1.value} –∑–∞–±–∞–Ω–µ–Ω –ø–æ –≥–µ–Ω–µ—Ä–∞–ª–∫–µ`;
    }
    if (formatedGeneralBalance.includes(formatedPerk2Input)) {
      result = `${result}\n\nüî∂${perk2.value} –∑–∞–±–∞–Ω–µ–Ω –ø–æ –≥–µ–Ω–µ—Ä–∞–ª–∫–µ`;
    }
    if (formatedGeneralBalance.includes(formatedPerk3Input)) {
      result = `${result}\n\nüî∂${perk3.value} –∑–∞–±–∞–Ω–µ–Ω –ø–æ –≥–µ–Ω–µ—Ä–∞–ª–∫–µ`;
    }
    if (formatedGeneralBalance.includes(formatedPerk4Input)) {
      result = `${result}\n\nüî∂${perk4.value} –∑–∞–±–∞–Ω–µ–Ω –ø–æ –≥–µ–Ω–µ—Ä–∞–ª–∫–µ`;
    }
    if (formatedTierBalance.includes(formatedPerk1Input)) {
      result = `${result}\n\nüî∂${perk1.value} –∑–∞–±–∞–Ω–µ–Ω –ø–æ ${killerTier[5]} —Ç–∏—Ä—É`;
    }
    if (formatedTierBalance.includes(formatedPerk2Input)) {
      result = `${result}\n\nüî∂${perk2.value} –∑–∞–±–∞–Ω–µ–Ω –ø–æ ${killerTier[5]} —Ç–∏—Ä—É`;
    }
    if (formatedTierBalance.includes(formatedPerk3Input)) {
      result = `${result}\n\nüî∂${perk3.value} –∑–∞–±–∞–Ω–µ–Ω –ø–æ ${killerTier[5]} —Ç–∏—Ä—É`;
    }
    if (formatedTierBalance.includes(formatedPerk4Input)) {
      result = `${result}\n\nüî∂${perk4.value} –∑–∞–±–∞–Ω–µ–Ω –ø–æ ${killerTier[5]} —Ç–∏—Ä—É`;
    }
    if (!formatedOfferingBalance.includes(formatedOfferingInput)) {
      result = `${result}\n\nüîÆ${offering.value} –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Å–ø–∏—Å–∫–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –ø–æ–¥–Ω–æ—à–µ–Ω–∏–π`;
    }
    if (!formatedItemBalance.includes(formatedItemInput)) {
      switch (item.value) {
        case 'firecracker':
          item.value = '–•–ª–æ–ø—É—à–∫–∞'
          break;
        case 'flashlight_yellow':
        item.value = 'üî¶–ñ—ë–ª—Ç—ã–π —Ñ–æ–Ω–∞—Ä—å'
        break;
        case 'flashlight_green':
        item.value = 'üî¶–ó–µ–ª—ë–Ω—ã–π —Ñ–æ–Ω–∞—Ä—å'
        break;
        case 'flashlight_purple':
        item.value = 'üî¶–§–∏–æ–ª–µ—Ç–æ–≤—ã–π —Ñ–æ–Ω–∞—Ä—å'
        break;
        case 'medkit_gray':
        item.value = 'üöë–°–µ—Ä–∞—è –∞–ø—Ç–µ—á–∫–∞'
        break;
        case 'medkit_yellow':
        item.value = 'üöë–ñ—ë–ª—Ç–∞—è –∞–ø—Ç–µ—á–∫–∞'
        break;
        case 'medkit_purple':
        item.value = 'üöë–§–∏–æ–ª–µ—Ç–æ–≤–∞—è –∞–ø—Ç–µ—á–∫–∞'
        break;
        case 'toolbox_gray':
        item.value = 'üß∞–°–µ—Ä—ã–π —Ç—É–ª–±–æ–∫—Å'
        break;
        case 'toolbox_yellow':
        item.value = 'üß∞–ñ—ë–ª—Ç—ã–π —Ç—É–ª–±–æ–∫—Å'
        break;
        case 'toolbox_green32':
        item.value = 'üß∞–í–º–µ—Å—Ç–∏—Ç–µ–ª—å–Ω—ã–π —è—â–∏–∫ —Å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º–∏ (32 –∑–∞—Ä—è–¥–∞)'
        break;
        case 'toolbox_green16':
        item.value = 'üß∞–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –º–µ—Ö–∞–Ω–∏–∫–∞ (32 –∑–∞—Ä—è–¥–æ–≤)'
        break;
        case 'toolbox_purple24':
        item.value = 'üß∞–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –ê–ª–µ–∫—Å–∞ (24 –∑–∞—Ä—è–¥–∞)'
        break;
        case 'toolbox_purple16':
        item.value = 'üß∞–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∏–Ω–∂–µ–Ω–µ—Ä–∞ (16 –∑–∞—Ä—è–¥–æ–≤)'
        break;
      }
      result = `${result}\n\n${item.value} –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Å–ø–∏—Å–∫–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤`;
    }
    if (!formatedaddonsRarityBalance.includes(formatedaddonsRarityInput)) {
      switch (addonsRarity.value) {
        case 'rarity_common':
          addonsRarity.value = 'üü§–ö–æ—Ä–∏—á–Ω–µ–≤—ã–µ';
          break;
        case 'rarity_uncommon':
            addonsRarity.value = 'üü°–ñ—ë–ª—Ç—ã–µ';
            break; 
        case 'rarity_rare':
            addonsRarity.value = 'üü¢–ó–µ–ª—ë–Ω—ã–µ';
            break; 
        case 'rarity_veryrare':
            addonsRarity.value = 'üü£–§–∏–æ–ª–µ—Ç–æ–≤—ã–µ';
            break;   
        case 'rarity_ultrarare':
            addonsRarity.value = 'üî¥–†–æ–∑–æ–≤—ã–µ';
            break;         
      }
      result = `${result}\n\n${addonsRarity.value} –∞–¥–¥–æ–Ω—ã –∑–∞–ø—Ä–µ—â–µ–Ω—ã`;
    }
    return result;
  } return '‚úÖ–ë–∏–ª–¥ –ø–æ–ª–Ω–æ—Å—Ç—å –ø—Ä–æ—à–µ–ª –ø—Ä–æ–≤–µ—Ä–∫—É‚úÖ';
  };

  module.exports = compare;